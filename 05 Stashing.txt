$ git stash
* git stash temporarily shelves (or stashes) changes you've made to your working copy so you can work on something else, and then come back and re-apply them later on. Stashing is handy if you need to quickly switch context and work on something else, but you're mid-way through a code change and aren't quite ready to commit.
* By default, it only stashes tracked files.
* -u => it stashes untracked files to (that are not excluded by .gitignore).

$ git stash list
* the list of stashes.

$ git stash apply [stash-index]
* it applies the most recent stash.
* stash-index => e.g. stash@{1}

$ git stash drop [stash-index]
* it drops the most recent stash.

$ git stash pop [stash-index]
* it applies and drops the most recent stash.
* Risk: If there are conflicts, the stash is still removed, which might be undesirable.

$ git stash branch <branch-name>
* It stashes files to a new branch.
* stashes files => [create the branch] => switch to the branch => apply and drop the stash
* We can move to an existing branch, carrying uncommitted changes, without stashing.
